name: Deploy ELK Stack

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: SSH Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MONITORING_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.MONITORING_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Kibana + Logstash
        run: |
          ssh ec2-user@${{ secrets.MONITORING_HOST }} << EOF
            set -e

            echo "📁 최신 모니터링 레포지토리 클론"
            cd ~
            rm -rf monitoring
            git clone https://github.com/pintoss-backend/monitoring.git
            cd monitoring

            echo "🧹 기존 Kibana/Logstash 컨테이너 종료"
            docker compose down || true

            echo "🔐 기존 Kibana 서비스 토큰 삭제 (있다면)"
            docker exec elasticsearch bin/elasticsearch-service-tokens delete elastic/kibana kibana-server || true

            echo "🔐 Kibana 서비스 토큰 생성"
            TOKEN=\$(docker exec elasticsearch bin/elasticsearch-service-tokens create elastic/kibana kibana-server | awk '{print \$2}')
            echo "✅ 생성된 토큰: \$TOKEN"

            echo "📄 .env 파일 저장"
            echo "ELASTICSEARCH_SERVICEACCOUNTTOKEN=\$TOKEN" > .env

            echo "🚀 Kibana + Logstash 실행"
            export ELASTICSEARCH_SERVICEACCOUNTTOKEN=\$TOKEN
            docker-compose up -d kibana logstash
          EOF
